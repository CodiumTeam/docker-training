pipeline {
    agent any
    options {
        parallelsAlwaysFailFast()
    }
    environment {
        COMPOSE_DOCKER_CLI_BUILD = 1
        DOCKER_BUILDKIT          = 1
        REGISTRY                 = "registry.local"
        SHORT_SHA                = "${GIT_COMMIT[0..6]}"
    }
    stages {
        stage('build and test'){
            parallel {
                stage('build') {
                    environment {
                       DOCKER_HUB_CREDENTIALS     = credentials('docker-hub')
                       SNYK_TOKEN                 = credentials('snyk-token')
                    }
                    steps {
                        sh 'docker build -t $REGISTRY/my-angular-app:latest -t $REGISTRY/my-angular-app:$SHORT_SHA .'
                        sh 'docker scan --login --token $SNYK_TOKEN'
                        sh 'docker scan $REGISTRY/my-angular-app:latest -f Dockerfile'
                    }
                }
                stage('test') {
                    steps {
                        sh 'docker build -t my-angular-app:test-latest --target test .'
                        sh 'docker run --rm -v ${PWD}/karma-tests:/app/karma-tests my-angular-app:test-latest'
                        junit 'karma-tests/results.xml'
                    }
                }
            }
        }
        stage('release') {
            environment {
                REGISTRY_CREDENTIALS     = credentials('docker-registry-local')
            }
            steps {
                sh 'docker login $REGISTRY -u $REGISTRY_CREDENTIALS_USR -p $REGISTRY_CREDENTIALS_PSW'
                sh 'docker push $REGISTRY/my-angular-app:$SHORT_SHA'
                sh 'docker push $REGISTRY/my-angular-app:latest'
            }
        }
    }
}